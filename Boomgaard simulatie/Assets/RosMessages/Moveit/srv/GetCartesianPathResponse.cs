//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Moveit
{
    public class GetCartesianPathResponse : Message
    {
        public const string RosMessageName = "moveit_msgs/GetCartesianPath";

        //  The state at which the computed path starts
        public RobotState start_state;
        //  The computed solution trajectory, for the desired group, in configuration space
        public RobotTrajectory solution;
        //  If the computation was incomplete, this value indicates the fraction of the path
        //  that was in fact computed (number of waypoints traveled through)
        public double fraction;
        //  The error code of the computation
        public MoveItErrorCodes error_code;

        public GetCartesianPathResponse()
        {
            this.start_state = new RobotState();
            this.solution = new RobotTrajectory();
            this.fraction = 0.0;
            this.error_code = new MoveItErrorCodes();
        }

        public GetCartesianPathResponse(RobotState start_state, RobotTrajectory solution, double fraction, MoveItErrorCodes error_code)
        {
            this.start_state = start_state;
            this.solution = solution;
            this.fraction = fraction;
            this.error_code = error_code;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(start_state.SerializationStatements());
            listOfSerializations.AddRange(solution.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.fraction));
            listOfSerializations.AddRange(error_code.SerializationStatements());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.start_state.Deserialize(data, offset);
            offset = this.solution.Deserialize(data, offset);
            this.fraction = BitConverter.ToDouble(data, offset);
            offset += 8;
            offset = this.error_code.Deserialize(data, offset);

            return offset;
        }

        public override string ToString()
        {
            return "GetCartesianPathResponse: " +
            "\nstart_state: " + start_state.ToString() +
            "\nsolution: " + solution.ToString() +
            "\nfraction: " + fraction.ToString() +
            "\nerror_code: " + error_code.ToString();
        }
    }
}
