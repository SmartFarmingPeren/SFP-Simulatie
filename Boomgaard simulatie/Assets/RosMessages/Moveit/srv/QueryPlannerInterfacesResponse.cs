//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Moveit
{
    public class QueryPlannerInterfacesResponse : Message
    {
        public const string RosMessageName = "moveit_msgs/QueryPlannerInterfaces";

        //  The planning instances that could be used in the benchmark
        public PlannerInterfaceDescription[] planner_interfaces;

        public QueryPlannerInterfacesResponse()
        {
            this.planner_interfaces = new PlannerInterfaceDescription[0];
        }

        public QueryPlannerInterfacesResponse(PlannerInterfaceDescription[] planner_interfaces)
        {
            this.planner_interfaces = planner_interfaces;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            
            listOfSerializations.Add(BitConverter.GetBytes(planner_interfaces.Length));
            foreach(var entry in planner_interfaces)
                listOfSerializations.Add(entry.Serialize());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            
            var planner_interfacesArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.planner_interfaces= new PlannerInterfaceDescription[planner_interfacesArrayLength];
            for(var i = 0; i < planner_interfacesArrayLength; i++)
            {
                this.planner_interfaces[i] = new PlannerInterfaceDescription();
                offset = this.planner_interfaces[i].Deserialize(data, offset);
            }

            return offset;
        }

        public override string ToString()
        {
            return "QueryPlannerInterfacesResponse: " +
            "\nplanner_interfaces: " + System.String.Join(", ", planner_interfaces.ToList());
        }
    }
}
