//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Moveit
{
    public class GetPositionFKRequest : Message
    {
        public const string RosMessageName = "moveit_msgs/GetPositionFK";

        //  A service definition for a standard forward kinematics service
        //  The frame_id in the header message is the frame in which 
        //  the forward kinematics poses will be returned
        public Header header;
        //  A vector of link name for which forward kinematics must be computed
        public string[] fk_link_names;
        //  A robot state consisting of joint names and joint positions to be used for forward kinematics
        public RobotState robot_state;

        public GetPositionFKRequest()
        {
            this.header = new Header();
            this.fk_link_names = new string[0];
            this.robot_state = new RobotState();
        }

        public GetPositionFKRequest(Header header, string[] fk_link_names, RobotState robot_state)
        {
            this.header = header;
            this.fk_link_names = fk_link_names;
            this.robot_state = robot_state;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            
            listOfSerializations.Add(BitConverter.GetBytes(fk_link_names.Length));
            foreach(var entry in fk_link_names)
                listOfSerializations.Add(SerializeString(entry));
            listOfSerializations.AddRange(robot_state.SerializationStatements());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            
            var fk_link_namesArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.fk_link_names= new string[fk_link_namesArrayLength];
            for(var i = 0; i < fk_link_namesArrayLength; i++)
            {
                var fk_link_namesStringBytesLength = DeserializeLength(data, offset);
                offset += 4;
                this.fk_link_names[i] = DeserializeString(data, offset, fk_link_namesStringBytesLength);
                offset += fk_link_namesStringBytesLength;
            }
            offset = this.robot_state.Deserialize(data, offset);

            return offset;
        }

        public override string ToString()
        {
            return "GetPositionFKRequest: " +
            "\nheader: " + header.ToString() +
            "\nfk_link_names: " + System.String.Join(", ", fk_link_names.ToList()) +
            "\nrobot_state: " + robot_state.ToString();
        }
    }
}
